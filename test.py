import asyncio
import httpx
from iiko.iiko_auth import get_auth_token, get_base_url


async def fetch_suppliers():
    token = await get_auth_token()
    base_url = get_base_url()
    url = f"{base_url}/resto/api/suppliers?key={token}"

    try:
        async with httpx.AsyncClient(verify=False) as client:
            response = await client.get(url)
            response.raise_for_status()
            print("üßæ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
            print(response.text)  # –í–ê–ñ–ù–û: –ø–æ–∫–∞–∂–µ—Ç, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –≤–µ—Ä–Ω—É–ª–æ—Å—å
            suppliers = response.json()

            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:", len(suppliers))
            for supplier in suppliers:
                print(f"üßæ {supplier.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')} | ID: {supplier.get('id')}")

    except httpx.HTTPError as e:
        print(f"[–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞] HTTP error: {e}")
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞] {e}")


if __name__ == "__main__":
    asyncio.run(fetch_suppliers())