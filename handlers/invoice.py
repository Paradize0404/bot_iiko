# handlers/invoice.py

from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

# FSM ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏—è
class IncomingInvoiceStates(StatesGroup):
    SelectType = State()
    SelectStore = State()
    SearchService = State()
    EnterServicePrice = State()
    SearchProduct = State()
    EnterProductQty = State()
    AddMoreOrFinish = State()
    Confirm = State()

# –¢–í–û–ò –ö–û–ù–°–¢–ê–ù–¢–´
EXPENSE_STORE_ID = "..."     # ID "–†–∞—Å—Ö–æ–¥ –ü–∏—Ü—Ü–µ—Ä–∏—è" ‚Äî –ø–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π!
MAGAZIN_NAL_ID = "..."       # ID –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ "–ú–∞–≥–∞–∑–∏–Ω –Ω–∞–ª" ‚Äî –ø–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π!

async def start_invoice(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await state.set_state(IncomingInvoiceStates.SelectType)
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞:",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–£—Å–ª—É–≥–∞", callback_data="inv_type:service")],
                [InlineKeyboardButton(text="–¢–æ–≤–∞—Ä", callback_data="inv_type:goods")]
            ]
        )
    )

# 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–∞—Å—Ö–æ–¥–∞ (—É—Å–ª—É–≥–∞/—Ç–æ–≤–∞—Ä)
@router.callback_query(F.data.startswith("inv_type:"))
async def handle_invoice_type(callback: types.CallbackQuery, state: FSMContext):
    invoice_type = callback.data.split(":")[1]
    await state.update_data(invoice_type=invoice_type)

    if invoice_type == "service":
        await state.update_data(store_id=EXPENSE_STORE_ID)
        await state.set_state(IncomingInvoiceStates.SearchService)
        await callback.message.edit_text("üîé –í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    elif invoice_type == "goods":
        await state.set_state(IncomingInvoiceStates.SelectStore)
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–ë–∞—Ä", callback_data="inv_store:bar")],
                [InlineKeyboardButton(text="–ö—É—Ö–Ω—è", callback_data="inv_store:kitchen")],
                [InlineKeyboardButton(text="–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–π", callback_data="inv_store:confection")],
                [InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data="inv_store:materials")],
                [InlineKeyboardButton(text="–ü–æ—Å—É–¥–∞", callback_data="inv_store:dishes")],
            ]
        )
        await callback.message.edit_text("üè¨ –ù–∞ –∫–∞–∫–æ–π —Å–∫–ª–∞–¥ –ø–æ—Å—Ç—É–ø–∏–ª —Ç–æ–≤–∞—Ä?", reply_markup=keyboard)
    else:
        await callback.message.edit_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞.")
