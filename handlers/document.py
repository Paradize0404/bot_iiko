from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
  # production router –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∞–º
from keyboards.main_keyboard import get_document_type_keyboard
from handlers.use_template import get_template_keyboard
from handlers.use_template import handle_prep_choice
from handlers.writeoff import start_writeoff 
router = Router()

ADMIN_IDS = [1877127405, 6446544048]



@router.message(F.text == "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
async def choose_document_type(message: Message, state: FSMContext):
    kb = get_document_type_keyboard()
    msg = await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:", reply_markup=kb)
    await state.update_data(form_message_id=msg.message_id)



@router.callback_query(F.data == "doc:writeoff")
async def handle_writeoff(callback: types.CallbackQuery, state: FSMContext):
    await start_writeoff(callback, state)  # üß† –ó–∞–ø—É—Å–∫–∞–µ–º FSM —Å–ø–∏—Å–∞–Ω–∏—è


@router.callback_query(F.data == "doc:move")
async def handle_move_placeholder(callback: types.CallbackQuery):
    await callback.answer("‚õîÔ∏è –ü–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ", show_alert=True)



@router.callback_query(F.data == "doc:prep")
async def forward_to_prep(callback: types.CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id

    if user_id in ADMIN_IDS:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üßæ –ü–æ —à–∞–±–ª–æ–Ω—É", callback_data="prep:by_template")],
            [InlineKeyboardButton(text="üõ† –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω", callback_data="prep:create_template")]
        ])
        await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –∞–∫—Ç–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:", reply_markup=keyboard)
        await callback.answer()
    else:
        await handle_prep_choice(callback)  # üëà –í—ã–∑–æ–≤ –∏–∑ use_template





